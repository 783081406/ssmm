<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 配置数据源 -->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc_url}"/>
        <property name="username" value="${jdbc_username}"/>
        <property name="password" value="${jdbc_password}"/>
        <property name="initialSize" value="0"/><!-- 初始化连接大小 -->
        <property name="maxActive" value="20"/><!-- 连接池最大使用连接数量 -->
        <property name="maxIdle" value="20"/><!-- 连接池最大空闲 -->
        <property name="minIdle" value="0"/><!-- 连接池最小空闲 -->
        <property name="maxWait" value="60000"/><!-- 获取连接最大等待时间 -->
        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/><!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000"/><!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="removeAbandoned" value="true"/><!-- 打开removeAbandoned功能 -->
        <property name="removeAbandonedTimeout" value="1800"/><!-- 1800秒，也就是30分钟 -->
        <property name="logAbandoned" value="true"/><!-- 关闭abanded连接时输出错误日志 -->
        <property name="filters" value="mergeStat"/><!-- 监控数据库 -->
    </bean>

    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--配置实体扫描路径，多个package可以用分号; 逗号, 分隔， 支持通配符*-->
        <property name="typeAliasesPackage" value="com.ccjjltx.entity"/>
        <property name="configuration" ref="mybatisConfig"/>
        <!-- MP 全局配置注入 -->
        <property name="globalConfig" ref="globalConfig"/>
        <property name="plugins">
            <array>
                <!-- 分页插件配置 -->
                <bean id="paginationInterceptor" class="com.baomidou.mybatisplus.plugins.PaginationInterceptor"/>
                <!-- 乐观锁插件 -->
                <bean id="optimisticLockerInterceptor"
                      class="com.baomidou.mybatisplus.plugins.OptimisticLockerInterceptor"/>
                <!-- 性能拦截器，兼打印sql-->
                <bean id="performanceInterceptor" class="com.baomidou.mybatisplus.plugins.PerformanceInterceptor"/>
            </array>
        </property>
    </bean>

    <bean id="mybatisConfig" class="com.baomidou.mybatisplus.MybatisConfiguration">
        <property name="mapUnderscoreToCamelCase" value="true"/>
        <!-- 部分数据库不识别默认的NULL类型（比如oracle，需要配置该属性 -->
        <property name="jdbcTypeForNull">
            <util:constant static-field="org.apache.ibatis.type.JdbcType.NULL"/>
        </property>
    </bean>

    <!-- 定义 MP 全局策略 -->
    <bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
        <!-- 逻辑删除 定义下面3个参数-->
        <property name="sqlInjector" ref="logicSqlInjector"/>
        <property name="logicDeleteValue" value="-1"/>
        <property name="logicNotDeleteValue" value="1"/>
        <!-- 全局ID类型： 0, "数据库ID自增"， 1, "用户输入ID", 2, "全局唯一ID", 3, "全局唯一ID"-->
        <property name="idType" value="2"/>
        <!--
            MYSQL->`mysql`
            ORACLE->`oracle`
            DB2->`db2`
            H2->`h2`
            HSQL->`hsql`
            SQLITE->`sqlite`
            POSTGRE->`postgresql`
            SQLSERVER2005->`sqlserver2005`
            SQLSERVER->`sqlserver`
        -->
        <!-- Oracle需要添加该项 -->
        <!-- <property name="dbType" value="oracle" /> -->
        <!-- 全局表为下划线命名设置 true -->
        <!-- <property name="dbColumnUnderline" value="true" /> -->
        <!--主键Sequence-->
        <!--<property name="keyGenerator" ref="keyGenerator"/>-->
        <!-- 公共字段填充处理器 -->
        <!--<property name="metaObjectHandler" ref="myMetaObjectHandler"/>-->
        <!--数据库关键字转义符，'desc', "desc" 2.1-gamma+不需要制定-->
        <!--<property name="identifierQuote" value="'" />-->
    </bean>

    <!-- 逻辑删除Sql注入器-->
    <bean id="logicSqlInjector" class="com.baomidou.mybatisplus.mapper.LogicSqlInjector"/>

    <!-- 配置oracle主键Sequence， 其他类型数据库，请配置相应的类型-->
    <!--<bean id="keyGenerator" class="com.baomidou.mybatisplus.incrementer.OracleKeyGenerator"/>-->

    <!-- 自定义处理器 -->
    <!--<bean id="myMetaObjectHandler" class="com.baomidou.test.MyMetaObjectHandler" />-->

    <!-- 配置mybatis 扫描mapper接口的路径, 相当于注解@MapperScan，@MapperScan("com.baomidou.mybatisplus.test.h2.entity.mapper")-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ccjjltx.dao"/>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
